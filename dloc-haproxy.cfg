global
    maxconn 4096

defaults
    mode http
    balance roundrobin
    option redispatch
    option forwardfor

    timeout connect 5s
    timeout queue 5s
    timeout client 50s
    timeout server 50s

frontend http-in
    bind *:1337 accept-proxy
    default_backend servers

    # Any URL beginning with socket.io will be flagged as 'is_websocket'
    acl is_websocket path_beg /socket.io
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i ws

    # The connection to use if 'is_websocket' is flagged
    use_backend websockets if is_websocket

frontend stats-in
    bind *:8000

    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy
    stats auth Username:Password

backend servers
    server router1 router1.dloc.io:1337 maxconn 1000 weight 10 check

backend websockets
    balance source
    option http-server-close
    option forceclose
    server router1 router1.dloc.io:1337 maxconn 1000 weight 10 check
    server router2 router2.dloc.io:1337 maxconn 1000 weight 10 check
    server router3 router3.dloc.io:1337 maxconn 1000 weight 10 check